# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
on: push
env:
  ASC_PACKAGE_PATH: ${{ github.workspace }}
  AZURE_SUBSCRIPTION: 338a72ed-a5dc-4805-ae7e-6d6af7a0d3c3
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean package --file pom.xml
      
    - name: Docker Login
      uses: docker/login-action@v2.0.0
      with:
        username:  ${{ secrets.DOCKERHUB_USERNAME }}
        password:  ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.1.1
      with:
        context: .
        push: true
        tags: akhan2017/weatheapi:latest
 
    - name: Helm tool installer
      uses: Azure/setup-helm@v3.3
      with:
        version: v3.10.0  
        
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v3
      with:
        version: v1.23.8
        
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v3
      with:
        # Resource Group Name
        resource-group: aksdevk8s-rg
        # AKS Cluster Name
        cluster-name: aksdevk8s
        # AKS Cluster Subscription
        creds:  ${{ secrets.AZURE_CREDENTIALS }}
        run: kubectl version
        
    - name: deploy to dev with artifact
      uses: azure/spring-cloud-deploy@v1
      with:
        azure-subscription: ${{ env.AZURE_SUBSCRIPTION }}
        action: Deploy
        service-name: dev-spring-boot-cluster
        app-name: chroniqueweather
        use-staging-deployment: false
        package: ${{ env.ASC_PACKAGE_PATH }}/**/*.jar
